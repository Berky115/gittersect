#!/usr/bin/env python
import fire
import requests
import json
import os

GITHUB_ACCESS_TOKEN = os.environ.get("GITHUB_ACCESS_TOKEN", None)

class GittersectService(object):
    '''A commandline utility comparing followers between two users'''

    def single_user(self, name):
        headers = None
        if GITHUB_ACCESS_TOKEN:
            headers = {'Authorization': 'token ' + GITHUB_ACCESS_TOKEN}
        session = requests.Session()
        
        url = ''.join(['https://api.github.com/users/', name, '/followers'])
        followers = json.loads(session.get(url, headers=headers).text)
        if 'message' in followers:
            return followers
        else:
            return self.extract_login(followers)

    def extract_login(self, followers):
        followers_login = []
        for follower in followers:
            if 'login' in follower:
                followers_login.append(follower['login'])

        return followers_login

    def compare_users(self, user1, user2):
        user1_followers = self.single_user(user1)
        user2_followers = self.single_user(user2)

        if 'message' in user1_followers:
            return 'Error on ' + user1 + ' ' + user1_followers['message']

        if 'message' in user1_followers:
            return 'Error on ' + user2 + ' ' + user2_followers['message']

        intersecting_followers = []
        for follower in user1_followers:
            if follower in user2_followers:
                intersecting_followers.append(follower)
        if len(intersecting_followers) == 0:
            intersecting_followers.append('No matches found!')
        return intersecting_followers

def main():
    g = GittersectService()
    fire.Fire(g.compare_users)

if __name__ == '__main__':
    main()
